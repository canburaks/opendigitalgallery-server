/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumLocaleCountry } from "./EnumLocaleCountry";
import {
  IsEnum,
  IsOptional,
  IsDate,
  IsString,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumLocaleCurrency } from "./EnumLocaleCurrency";
import { Price } from "../../price/base/Price";
import { ProductMeta } from "../../productMeta/base/ProductMeta";

@ObjectType()
class Locale {
  @ApiProperty({
    required: false,
    enum: EnumLocaleCountry,
    isArray: true,
  })
  @IsEnum(EnumLocaleCountry, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumLocaleCountry], {
    nullable: true,
  })
  country?: Array<"USA" | "Turkey" | "Germany" | "France" | "UK" | "Japan">;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    enum: EnumLocaleCurrency,
    isArray: true,
  })
  @IsEnum(EnumLocaleCurrency, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumLocaleCurrency], {
    nullable: true,
  })
  currency?: Array<"USD" | "TRY" | "EUR" | "GBP">;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name!: string | null;

  @ApiProperty({
    required: false,
    type: () => [Price],
  })
  @ValidateNested()
  @Type(() => Price)
  @IsOptional()
  prices?: Array<Price>;

  @ApiProperty({
    required: false,
    type: () => [ProductMeta],
  })
  @ValidateNested()
  @Type(() => ProductMeta)
  @IsOptional()
  productMetas?: Array<ProductMeta>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}

export { Locale };
